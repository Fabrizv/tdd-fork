#name: CI workflow
#
#on:
#  push:
#    branches: ["main"]
#  pull_request:
#    branches: ["main"]
#
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#    container: python:3.9-slim
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#      - name : Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt
#      - name: Lint with flake8
#        run: |
#          flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
#          flake8 src --count --max-complexity=10 --max-line-length=127 --statistics
#      - name: Run unit tests with nose
#        run:
#          nosetests -v --with-spec --spec-color --with-coverage --cover-package=app
name: CI workflow
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    container: python:3.9-slim
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint with Flake8
        run: |
          flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 src --count --max-complexity=10 --max-line-length=127 --statistics
      - name: Run unit tests with nose
        run: nosetests -v --with-spec --spec-color --with-coverage --cover-package=src
      - name: SonarQube analysis
        run: |
          # Replace <SONAR_TOKEN> and <SONAR_PROJECT_KEY> with your SonarQube token and project key
          sonar-scanner \
            -Dsonar.projectKey=<SONAR_PROJECT_KEY> \
            -Dsonar.sources=src \
            -Dsonar.host.url=<SONARQUBE_URL> \
            -Dsonar.login=<SONAR_TOKEN>

